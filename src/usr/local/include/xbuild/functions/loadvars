#!/usr/bin/env bash
# -*- coding: utf-8 -*-

function loadvars()
{
	header "Load the Environment Variables"

    log "Load persisted Environment Variables"
    if [ -d /etc/xinit/env.d ]
    then
        for file in /etc/xinit/env.d/*
        do
            [ -e "$file" ] || continue

            env_name=$(basename -- "$file")
            env_value=$(< "$file")

            declare -x "$env_name=$env_value"
        done
    fi

    setvar "LC_ALL" "C"
    setvar "DEBIAN_FRONTEND" "noninteractive"
    setvar "SHELL" "/bin/bash"

    # Prevent initramfs updates from trying to run grub and lilo.
    # https://journal.paul.querna.org/articles/2013/10/15/docker-ubuntu-on-rackspace/
    # http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=594189
    setvar "INITRD" "no"

    # Determine internal Mirror
    isInternal=$(< /etc/resolv.conf sed '/fritz.box\|x-company.de/!d')
    if [ ! -z "$isInternal" ]
    then
        setvar "XBUILD_MIRROR_IS_AVAIL" "true"
    else
        setvar "XBUILD_MIRROR_IS_AVAIL" "false"
    fi

    # Determine OS
    osname=$(< /etc/os-release sed '/ID=ubuntu/!d')
    if [ ! -z "$osname" ]
    then
        setvar "XBUILD_OSNAME" "ubuntu"
    else
        setvar "XBUILD_OSNAME" "debian"
    fi


    # Determine OS Codename
    oscodenames=("buster" "jessie" "stretch" "bionic" "cosmic" "disco" "xenial")
    for oscodename in "${oscodenames[@]}"
    do
        tmp=$(< /etc/os-release sed "/$oscodename/!d")
        if [ ! -z "$tmp" ]
        then
            setvar "XBUILD_OSCODENAME" "$oscodename"
            break
        fi
    done

    osid=$(< /etc/os-release sed '/VERSION_ID=/!d' | sed 's/VERSION_ID=\|"//g')
    if [ ! -z "$osid" ]
    then
        setvar "XBUILD_OSRELEASE" "$osid"
    fi
}
